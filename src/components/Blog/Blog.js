import React from "react";
import Navbar from "../Navigation/Navbar";
import { Box, Typography, Button, makeStyles } from "@material-ui/core";

const useStyles = makeStyles({
  container: {
    width: "100%",
    height: "100vh",
    padding: "0 300px",
    backgroundColor: "#1a202c",
    display: "flex",
    flexDirection: "column",
    color: "white",
  },
  header: {
    display: "flex",
    flexDirection: "column",
    alignItems: "flex-start",
    justifyContent: "center",
    marginTop: 30,
    marginBottom: 20,
  },
  img: {
    width: "100%",
    padding: "0 100px",
    marginTop: 20,
  },
});

const Blog = () => {
  const classes = useStyles();

  return (
    <>
      <Navbar />
      <Box className={classes.container}>
        <Box className={classes.header}>
          <Typography variant="h3" className={classes.headerTxt}>
            Page Replacement Algorithms
          </Typography>
        </Box>
        <hr />
        <Box className={classes.description}>
          <ul>
            <li>
              • What is a page? - For non-contiguous memory allocation, the
              Logical address Space is divided into fixed-size blocks, called
              pages.
            </li>
            <li>
              • Logical Address or Virtual Address (represented in bits): An
              address generated by the CPU
            </li>
            <li>
              • What is a frame? - The Physical Address Space is conceptually
              divided into a number of fixed-size blocks, called frames.
            </li>
            <li>
              • Physical Address (represented in bits): An address actually
              available on memory unit
            </li>
            <li>• Page Size = Frame Size</li>
            <li>
              • What is paging? - Paging is a memory management scheme that
              eliminates the need for contiguous allocation of physical memory.
              The mapping from virtual to physical address is done by the memory
              management unit (MMU) which is a hardware device and this mapping
              is known as paging technique.
            </li>
            <li>
              • (Virtual memory - Virtual Memory is a storage allocation scheme
              in which secondary memory can be addressed as though it were part
              of the main memory.)
            </li>
            <li>
              • Page fault - A page fault occurs when a page referenced by the
              CPU is not found in the main memory.
            </li>
          </ul>

          <Typography variant="h5" className={classes.headerTxt}>
            Page replacement:
          </Typography>
          <Typography variant="p">
            When a page fault occurs, the required page has to be brought from
            the secondary memory. If all the frames of main memory are already
            occupied, then a page has to be replaced. The process of replacement
            is sometimes called swap out or write to disk.
          </Typography>
          <Typography variant="h5" className={classes.headerTxt}>
            Page Replacement Algorithms:
          </Typography>
          <Typography variant="p">
            The page replacement algorithm decides which memory page is to be
            replaced. Goal of an Algorithm is – lowest page fault rate. A page
            replacement algorithm is evaluated by running the particular
            algorithm on a string of memory references and compute the page
            faults. Referenced string is a sequence of pages being referenced.
          </Typography>
          <Typography variant="h5" className={classes.headerTxt}>
            1.) FCFS (First Come First Serve):
          </Typography>
          <Typography variant="p">
            <ul>
              <li>
                In this algorithm, a queue is maintained. The page which is
                assigned the frame first will be replaced first. In other words,
                the page which resides at the rare end of the queue will be
                replaced on every page fault.{" "}
              </li>
              <li>
                However, FIFO is known to suffer from a problem known as
                Belady's anomaly which occurs when increasing the number of page
                frames results in an increase in the number of page faults for a
                given memory access pattern.
              </li>
              <li>
                Belady’s anomaly – Belady’s anomaly proves that it is possible
                to have more page faults when increasing the number of page
                frames while using the First in First Out (FIFO) page
                replacement algorithm.
              </li>
              <li>
                For example, if we consider reference string 3, 2, 1, 0, 3, 2,
                4, 3, 2, 1, 0, 4 and 3 slots, we get 9 total page faults, but if
                we increase slots to 4, we get 10 page faults.
              </li>
            </ul>
          </Typography>
          <Typography variant="h5" className={classes.headerTxt}>
            Example:
          </Typography>
          <img src="./images/fifo.jpg" alt="FIFO" className={classes.img} />

          <Typography variant="h5" className={classes.headerTxt}>
            2.) Optimal Page Replacement:
          </Typography>
          <Typography variant="p">
            This algorithm replaces the page which will not be referred for so
            long in future. Optimal page replacement is perfect, but it is
            practically impossible to implement because the pages that will not
            be used in future for the longest time cannot be predicted. But it
            can be used as a benchmark as other algorithms are compared to this
            in terms of optimality.
          </Typography>
          <Typography variant="h5" className={classes.headerTxt}>
            Example:
          </Typography>
          <img src="./images/OPR.jpg" alt="OPR" className={classes.img} />

          <Typography variant="h5" className={classes.headerTxt}>
            3.) LRU (Least Recently Used):
          </Typography>
          <Typography variant="p">
            This algorithm replaces the page which has not been referred for a
            long time i.e., the page least recently used is replaced.
          </Typography>
          <Typography variant="h5" className={classes.headerTxt}>
            Example:
          </Typography>
          <img src="./images/LRU.jpg" alt="LRU" className={classes.img} />
          <Typography variant="h5" className={classes.headerTxt}>
            4.) MRU (Most recently Used):
          </Typography>
          <Typography variant="p">
            This algorithm replaces the page which has been referred most
            recently.
          </Typography>
          <Typography variant="h5" className={classes.headerTxt}>
            Example:
          </Typography>
          <img src="./images/MRU.jpg" alt="LRU" className={classes.img} />
        </Box>
      </Box>
    </>
  );
};

export default Blog;
